@use 'variables' as var;

// Responsive mixins
@mixin mobile {
  @media (max-width: #{var.$breakpoint-sm}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{var.$breakpoint-sm + 1}) and (max-width: #{var.$breakpoint-lg - 1}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{var.$breakpoint-lg}) {
    @content;
  }
}

@mixin touch-device {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Transitions
@mixin transition($property: all) {
  transition: $property var.$transition-speed var.$transition-timing;
}

// Cards
@mixin card-base {
  background-color: var(--card-bg);
  border-radius: var.$border-radius-md;
  border: 1px solid var(--border-color);
  @include transition(box-shadow);

  &:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
}

// Buttons
@mixin button-base {
  display: inline-flex;
  align-items: center;
  gap: var.$spacing-sm;
  padding: var.$spacing-sm var.$spacing-md;
  border-radius: var.$border-radius-sm;
  font-weight: var.$font-weight-medium;
  cursor: pointer;
  @include transition;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Reset button styles
@mixin reset-button {
  appearance: none;
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  color: inherit;
  font: inherit;
  
  &:focus {
    outline: none;
  }
}

// Forms
@mixin input-base {
  width: 100%;
  padding: var.$spacing-sm;
  border: 1px solid var(--input-border);
  border-radius: var.$border-radius-sm;
  background-color: var(--input-bg);
  color: var(--input-text);
  @include transition(border-color);

  &:focus {
    border-color: var(--input-focus-border);
    outline: none;
    box-shadow: 0 0 0 2px var(--input-focus-shadow);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Typography
@mixin heading($size) {
  font-weight: var.$font-weight-semibold;
  line-height: var.$line-height-tight;
  color: var(--title-color);
  
  @if $size == 'h1' {
    font-size: var.$font-size-4xl;
  } @else if $size == 'h2' {
    font-size: var.$font-size-3xl;
  } @else if $size == 'h3' {
    font-size: var.$font-size-2xl;
  } @else if $size == 'h4' {
    font-size: var.$font-size-xl;
  }
}

// Scrollbars
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-track {
    background: var(--scrollbar-track);
    border-radius: var.$border-radius-full;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb);
    border-radius: var.$border-radius-full;

    &:hover {
      background: var(--scrollbar-thumb-hover);
    }
  }
}

// New mixins for theme management

// Generates component styles for all themes
@mixin theme-variants($selector, $property, $value-map) {
  @each $theme, $value in $value-map {
    .#{$theme}-theme #{$selector} {
      #{$property}: $value;
    }
  }
}

// Animation for theme transitions
@mixin theme-animation {
  animation: theme-transition 0.3s ease-out;
}

// Applique un overlay de couleur basé sur le thème
@mixin theme-overlay($opacity: 0.1) {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--primary-color);
    opacity: $opacity;
    pointer-events: none;
    z-index: 1;
    border-radius: inherit;
  }
}

// Style de carte avec des options avancées
@mixin advanced-card($with-hover: true, $with-border: true, $with-shadow: true) {
  background-color: var(--card-bg);
  border-radius: var.$border-radius-md;
  @include transition(all);
  
  @if $with-border {
    border: 1px solid var(--border-color);
  }
  
  @if $with-shadow {
    box-shadow: var.$shadow-sm;
  }
  
  @if $with-hover {
    &:hover {
      transform: translateY(-2px);
      box-shadow: var.$shadow-md;
      
      @if $with-border {
        border-color: var(--primary-color);
      }
    }
  }
}

// Génère un bouton thématique
@mixin theme-button($variant: 'default') {
  @include button-base;
  
  @if $variant == 'primary' {
    background-color: var(--primary-color);
    color: white;
    
    &:hover {
      background-color: var(--primary-color-hover);
    }
  } @else if $variant == 'secondary' {
    background-color: var(--secondary-color);
    color: var(--text-color);
    
    &:hover {
      background-color: var(--secondary-color-hover);
    }
  } @else if $variant == 'ghost' {
    background-color: transparent;
    color: var(--text-color);
    
    &:hover {
      background-color: var(--button-ghost-hover);
    }
  } @else if $variant == 'outline' {
    background-color: transparent;
    color: var(--primary-color);
    border: 1px solid var(--primary-color);
    
    &:hover {
      background-color: var(--primary-color-light);
    }
  } @else {
    // default
    background-color: var(--button-bg);
    color: var(--button-text);
    
    &:hover {
      background-color: var(--button-hover-bg);
    }
  }
}